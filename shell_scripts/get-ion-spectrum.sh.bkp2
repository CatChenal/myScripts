#!/bin/bash
# TO be called outside a subfolder containing converted (.PDB) files that are preferably most-occ files.
#  To get all ions/ligands as a chain for coloring purposes:
#   -> visualize resulting pdb in pymol & color by spectrum; set sphere_scale to 1.50
#   -> save as pic to overlay on distance graph.
# Note: "-1" in reassignment of x-coord: to match time-slice of struc coming from an md sim (e.g. t-0 -> md_00 -> ion00 -> xyz(0,0,0);
#     (awk increments counter before assignment, so r=1 on the '0th' slice).
#
A1="ARG1 :: ion name (e.g. CL, PO4)"
A2="ARG2 :: separation_distance (separation of 4 btw ion maybe too tight; 8 better)"
A3="ARG3 :: folder containing converted (.PDB) files"
A4="ARG4 :: slice: e.g. start of name of pdbs in given folder"
A5="[ARG5 :: atom_name_selection: atom to select in a multi-ion atom, e.g. 'P   PO4']"
#
if [ $# -lt 4 ]; then
  echo "Argument(s) missing:"
  echo "           "$A1
  echo "           "$A2
  echo "           "$A3
  echo "           "$A4
  echo "           "$A5
  echo "Example: get-ion-spectrum.sh PO4 8 PDBs7 GlpT_PI P"
  exit 0
fi
ION=$1
GAP=$2
FLDR=$3
SLICE=$4
sedARG=" 's/^"$FLDR"\/"$SLICE"//' "
outfile1=$FLDR/$IONxyz
outfile2=$FLDR/$IONxyz-spectrum-gap$GAP.PDB

# Coordinates of most occ'd IONs:
if [ $# -eq 5 ]; then
#  LEN=`echo $5 | awk -v atm=$5 '{print length(atm)}'`
#  case $LEN in
#    "") echo "zero length";;
#     1) grepARG=" '$5   $ION' $FLDR/$SLICE*.PDB";;
##SEL=`echo -e "$5\ \ \ $ION"`;;
##SEL=`printf "%s   %s" $5   $ION`;;
##SEL=`echo -e "$5   $ION"`;;
#     2) grepARG=" '$5  $ION' $FLDR/$SLICE*.PDB";;
##SEL=`printf "%s  %s" $5  $ION`;;
##SEL="$5\ \ $ION";;
##     3) grepARG=" '$5 $ION' $FLDR/$SLICE*.PDB";;
##SEL=`printf "%s %s" $5 $ION`;;
##SEL="$5\ $ION";;
#  esac
##  echo "Len: " $LEN"."
##  printf "SEL: %s" $SEL

 # grepARG=" '$SEL' $FLDR/$SLICE*.PDB"
  echo -e $grepARG
else
  grepARG=" $ION $FLDR/$SLICE*.PDB"
fi

# val="'P   PO4'"; export val; eval egrep "$val" PDBs7/GlpT_PI*.PDB | sed -e 's/^PDBs7\/GlpT_PI//' -e 's/-occ7.PDB//' -e 's/:/ /'
# 1  2      3    4   5   6  7        8       9      10
#46 ATOM   1381  P   PO4 H  01       0.757   1.849  -3.857

eval egrep "$grepARG" | eval sed "$sedARG" |sed -e 's/-occ7.PDB//' -e 's/:/ /' > $FLDR/tmp
exit 0

# Replace res_ID w/slice id:
awk ' $7=$1 { printf("%-6s%5d%4s%5s%2s%4s    %8.3f%8.3f%8.3f\n", $2,$3,$4,$5,$6,$7,$8,$9,$10)}' $FLDR/tmp  > $outfile1.PDB

# Bring all ion on one axis with GAP for separation:
awk -v gap=$GAP '\
{ for( r=0; r<=NR; r++ ) $7=(-1+r)*gap}; $8=0.000; $9=0.000; { printf("%-6s%5d%4s%5s%2s%4s    %8.3f%8.3f%8.3f\n", $1,$2,$3,$4,$5,$6,$7,$8,$9)}' $outfile1.PDB > $outfile2

/bin/rm $FLDR/tmp

#!/bin/bash
if [[ $# -eq 0 ]]; then
  pH=4.5
else
  pH=$1
fi
 echo Energies for CL at pH=$pH
if [[ ! -f fort.38 ]]; then
  echo '.......File fort.38 not found.'
  exit 0
fi
if [[ ! -d energies ]]; then
  echo '.......Unzip energies.opp first.'
  exit 0
fi
if [[ ! -d step3_out.pdb ]]; then
   ln -s energies step3_out.pdb
fi
# get ph_col:
awkARG='{ for(n=2;n<=NF;n++) {if ( $n == col ) print n} }'
Col=$(head -1 fort.38 |sed 's/ ph /ph/'| awk -v col="$pH" "$awkARG")
Cols=$(head -1 fort.38|awk '{print NF}')
echo 'pH column in fort.38: ' $Col
echo 'Tot columns in fort.38: ' $Cols

read -p "Do sdiff only? (0/1): " do_sdiff
if [ $do_sdiff -eq 0 ]; then

  read -p "Use existing .mfe files? (0/1): " use_mfe_files
  read -p "Remove .mfe files when done? (0/1): " rm_mfe
  read -p "Used exisitng mostfav files? (0/1): " use_mostfav
  read -p "Output non0 mfe values only? (0/1): " apply_mfe_cutoff
  read -p "Output charge vector at given pH? (0/1): " crg_vec

  if [ $crg_vec -eq 1 ]; then
    get-crg-vector.sh $pH
  fi

  for ch in $(echo 'A B')
  do
    if [ $use_mostfav -eq 0 ]; then
      /bin/rm -f CL-1$ch'_mostfav.csv'
      h3_mostfav.sh CL-1$ch 0      # out: CL_-A_mostfav.csv
    fi
    for conf in $(awk '$1 !~ /CONFORM/{print $1}' CL-1$ch'_mostfav.csv')
    do
      if [ $use_mfe_files -eq 0 ]; then
        mfe++ $conf -t 0 -x 0        # out: $conf.mfe
      fi
      if [ -f $conf.mfe ]; then
        /bin/rm -f $conf.mfe$pH.csv
        sed -i 's/-0\.00/ 0\.00/g' $conf.mfe
       # Remove residues not common to both chains: A0017, A0459, A0460:
        sed -i '/A0017/d; /A0459/d; /A0460/d' $conf.mfe

        # if NF==2 parse $2 into 8-char chunks (bc mfe++ val printf="%6.2"=8char). ex: #GLU_A0148_ 134.57135.57139.71....
        # Split conf_id to implement sort order: 1:RES 2:seq# 3:chn; i.e. from ARG_A0147 to 'ARG 0147 A'
#_CL_A0477_ 703.83698.89702.18696.41658.50549.71359.33186.26 71.70 20.60 10.71  5.77  1.65  0.00  0.00

       nawk -v col="$Col" -v cols="$Cols" -v cutoff="$apply_mfe_cutoff" 'BEGIN {FS="\t"; OFS="\t"; len=6} 
                          NR==1 { print "AAA_0000_A",$col }; 
                          NR>1 { pHcol=$col; new=""; 
                                 if ( (NF==2)&&(col!=cols) ) { start=(col - 1)*len+1; pHcol=substr($2,start,len) };
                                 if ( $1 == "SUM" ) { new="ZUM" } else {new=substr($1,1,3)"_"substr($1,6,4)"_"substr($1,5,1) };
                                 if (cutoff==1) { if ( pHcol != 0 ) {print new, pHcol} } else { {print new, pHcol} }
                               }' $conf.mfe > tmp

       sort -k1 -k2 -k3 tmp | nawk -F\t '{ print $1, $2 }' > $conf.mfe$pH.csv

        if [ ! -s $conf.mfe$pH.csv ]; then
          /bin/rm $conf.mfe$pH.csv
          echo $conf.mfe$pH.csv' empty; removed.'
        fi
        /bin/rm tmp
        /bin/rm -f $conf.mfe.non0

        if [ $rm_mfe -eq 1 ]; then
          /bin/rm $conf.mfe
        fi
      fi
    done
  done
fi
# Get chain diff: _CL-1B0468_001.mfe4.5.csv
#                 0123456789
#> head _CL-1A0466_001.mfe4.5.csv
#AAA_0000_A 4.5
#ALA_0034_A 0.00

for mfe_file1 in $(ls _CL-1A*.mfe$pH.csv)
do
  out=${mfe_file1:1:9}
  conf1=${mfe_file1:6:8}
  mfe_file2='_CL-1B'$conf1.mfe$pH.csv

  # Note: Using FS="\" did not work with getline -> need to recombine confId:
  nawk -v file1="$mfe_file2" ' BEGIN { FS="\t"; OFS="\t"; print "CONF......","chainA","chainB","diff"
                                       # load array with contents of file1
                                       while ( getline < file1 > 0 )
                                       {
                                        f1_counter++
                                        f1[f1_counter,1] = $1
                                        f1[f1_counter,2] = $2
                                       }
                                      }
                               { diff=(f1[NR,2]-$2); { if (diff!=0) { print $1,$2,f1[NR,2],diff } } }
                               END{ print file1,"minus",FILENAME}' $mfe_file1 > $out"_mfe_chn_diff.csv"
done
